source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
rexp(40, 0.2)
?repeat
()
?repeat
)
?apply
?sapply
source('~/GitHub/StaticalInference3/Part1.R')
sd(simulations)
mean(simulations)
hist(round(simulations))
round(simulations)
hist(round(simulations, 1))
round(simulations, 1)
hist(simulations)
1/0.2/sqrt(40)
source('~/GitHub/StaticalInference3/Part1.R')
nosim <- 1000
cfunc <- function(x, n) 2 * sqrt(n) * (mean(x) - 0.5)
dat <- data.frame(
x = c(apply(matrix(sample(0:1, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(0:1, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(0:1, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
str(date)
str(dat)
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
?repl
?replicate
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
rm(simulations)
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
?as.matrix
source('~/GitHub/StaticalInference3/Part1.R')
simulations <- as.data.frame(replicate(noSim, mean(rexp(n, lambda)), simplify="matrix"))
colnames(simulations) = "means"
simulations <- as.data.frame(replicate(noSim, mean(rexp(n, lambda)), simplify="data.frame"))
simulations <- replicate(noSim, mean(rexp(n, lambda)), simplify="data.frame")
?replicate
simulations <- replicate(noSim, mean(rexp(n, lambda)), simplify="data.frame")
simulations <- replicate(noSim, mean(rexp(n, lambda)), simplify="data.fram")
simulations <- sapply(1:noSim, data.frame(means=mean(rexp(n, lambda))))
simulations <- sapply(1:noSim, func(x) data.frame(means=mean(rexp(n, lambda))))
simulations <- dataframe(means=replicate(noSim, mean(rexp(n, lambda))))
simulations <- data.frame(means=replicate(noSim, mean(rexp(n, lambda))))
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
?dnorm
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
dnorm(x = simulations$x, mean=expectedMean, sd=expectedStdev)
?stat_function
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
?stat_function
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
?stat_function
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
scale_colour_manual
?scale_colour_manual
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
?scale_colour_manual
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
?expression
?parse
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
?scale_colour_manual
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
?theme
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
source('~/GitHub/StaticalInference3/Part1.R')
length(simulations$x>mean-error975 & simulations$x<mean+error975)
error975 <- qt(0.975, n-1) * stdError
require(ggplot2)
set.seed(1)
noSim = 10000
n <- 40
lambda <- 0.2
simulations <- data.frame(x=replicate(noSim, mean(rexp(n, lambda))))
mean <- mean(simulations$x)
stdError <- sd(simulations$x)
expectedMean <- 1 / lambda
expectedStdError <- 1 / lambda / sqrt(n)
error975 <- qt(0.975, n-1) * stdError
length(simulations$x>mean-error975 & simulations$x<mean+error975)
simulations
sum(simulations$x>mean-error975 & simulations$x<mean+error975)
mean-error975
qt(0.975, n-1)
qnorm(0.95, n-1)
pnorm(2)
qnorm(2)
dnorm(2)
pnorm(2)
qnorm(2)
pnorm(2)
pnorm(3)
dnorm(3)
dnorm(2)
1-dnorm(2)
?qnorm
pnorm(0.95)
pnorm(0.99)
cdf(0.95)
expression(X +/- 1.96)
expression(X %+-% 1.96)
print(expression(X %+-% 1.96))
expression(X %+-% 1.96)*S/sqrt(n)
expression((X %+-% 1.96)*S/sqrt(n))
S
expression((X %+-% 1.96)*stdError/sqrt(n))
parse(text="(X %+-% 1.96)*stdError/sqrt(n)")
print(parse(text="(X %+-% 1.96)*stdError/sqrt(n)"))
stdError
sqrt(n)
qnorm(1.96)
pnorm(1.96)
pnorm(1.96)-pnorm(-1.96)
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
str(ToothGrowth )
plot(ToothGrowth )
str(ToothGrowth$dose)
unique(ToothGrowth$dose)
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
?aes
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
qplot(ToothGrowth)
library(ggplot2)
qplot(ToothGrowth)
qplot(x=ToothGrowth)
qplot(x=ToothGrowth$len)
?facet_grid
g <- ggplot(ToothGrowth, aes(len)) + geom_point()
g <- g + facet_grid(supp ~ dose)
print(g)
p <- ggplot(mtcars, aes(mpg, wt)) + geom_point()
p + facet_grid(vs ~ am)
p <- ggplot(mtcars, aes(mpg)) + geom_point()
p + facet_grid(vs ~ am)
g <- ggplot(ToothGrowth, aes(1:length(len), len)) + geom_point()
g <- g + facet_grid(supp ~ dose)
print(g)
g <- ggplot(ToothGrowth, aes(len)) + geom_line()
g <- g + facet_grid(supp ~ dose)
print(g)
g <- ggplot(ToothGrowth, aes(1:length(len), len, colour=c(supp, dose))) + geom_point()
print(g)
g <- ggplot(ToothGrowth, aes(1:length(len), len, colour=supp)) + geom_point()
print(g)
print(ggplot(ToothGrowth, aes(1:length(len), len, colour=supp, colour=dose)) + geom_point())
print(ggplot(ToothGrowth, aes(1:length(len), len, colour=dose)) + geom_point())
print(ggplot(ToothGrowth, aes(1:length(len), len, colour=dose)) + geom_point() + scale_fill_hue())
print(ggplot(ToothGrowth, aes(1:length(len), len, colour=dose)) + geom_point() + scale_fill_brewer())
print(ggplot(ToothGrowth, aes(1:length(len), len, colour=dose, shape=supp)) + geom_point() + scale_fill_brewer())
print(ggplot(ToothGrowth, aes(y=len, colour=dose)) + geom_point() + scale_fill_brewer())
print(ggplot(ToothGrowth, aes(x=1:min(sum(supp=="OJ"), sum(supp="VC"))), y=len, colour=dose)) + geom_point() + facet_grid(. ~ supp))
print(ggplot(ToothGrowth, aes(x=1:min(sum(supp=="OJ"), sum(supp="VC"))), y=len, colour=dose) + geom_point() + facet_grid(. ~ supp))
print(ggplot(ToothGrowth, aes(x=1:min(sum(supp=="OJ"), sum(supp=="VC"))), y=len, colour=dose) + geom_point() + facet_grid(. ~ supp))
print(ggplot(ToothGrowth, aes(1:min(sum(supp=="OJ"), sum(supp=="VC"))), len, colour=dose) + geom_point() + facet_grid(. ~ supp))
print(ggplot(ToothGrowth, aes(1:min(sum(supp=="OJ"), sum(supp=="VC"))), len, colour=dose) + geom_point())
max(sum(ToothGrowth$supp=="OJ"), sum(ToothGrowth$supp=="VC"))
count <- max(sum(ToothGrowth$supp=="OJ"), sum(ToothGrowth$supp=="VC"))
print(ggplot(ToothGrowth, aes(1:max(sum(supp=="OJ"), sum(supp=="VC")), len, colour=dose) + geom_point() + facet_grid(. ~ supp)))
print(ggplot(ToothGrowth, aes(1:count, len, colour=dose) + geom_point() + facet_grid(. ~ supp)))
print(ggplot(ToothGrowth, aes(1:count, len, colour=dose) + geom_point()))
print(ggplot(ToothGrowth, aes(1:length(len), len, colour=dose) + geom_point()))
print(ggplot(ToothGrowth, aes(1:length(len), len, colour=dose, shape=supp)) + geom_point() + scale_fill_brewer())
print(ggplot(ToothGrowth, aes(1:count, len, colour=dose, shape=supp)) + geom_point() + facet_grid(. ~ supp))
?rep
print(ggplot(ToothGrowth, aes(rep(1:length(len)/2, 2), len, colour=dose, shape=supp)) + geom_point() + facet_grid(. ~ supp))
print(ggplot(ToothGrowth, aes(rep(1:(length(len)/2), 2), len, colour=dose, shape=supp)) + geom_point() + facet_grid(. ~ supp))
print(ggplot(ToothGrowth, aes(rep(1:(length(len)/2), 2), len, colour=dose)) + geom_point() + facet_grid(. ~ supp))
print(ggplot(ToothGrowth, aes(rep(1:(length(len)/2), 2), len, colour=dose)) + geom_point() + facet_grid(. ~ supp) + scale_x_discrete(name=""))
ToothGrowth$Dose = as.factor(ToothGrowth$dose)
ToothGrowth$dose = as.factor(ToothGrowth$dose)
print(ggplot(ToothGrowth, aes(rep(1:(length(len)/2), 2), len, colour=dose)) + geom_point() + facet_grid(. ~ supp) + scale_x_discrete(name="", labels=""))
print(ggplot(ToothGrowth, aes(rep(1:(length(len)/2), 2), len, colour=dose)) + geom_point(size=3) + facet_grid(. ~ supp) + scale_x_discrete(name="", labels=""))
source('~/GitHub/StaticalInference3/Part2.R')
ggplot(ToothGrowth, aes(rep(1:(length(Len)/2), 2), Len, colour=Dose))
+ geom_point(size = 3)
+ facet_grid(. ~ Supp)
+ scale_x_discrete(name="", labels="")
ggplot(ToothGrowth, aes(rep(1:(length(Len)/2), 2), Len, colour=Dose))
ggplot(ToothGrowth, aes(rep(1:(length(Len)/2), 2), Len, colour=Dose))
+ geom_point(size = 3)
ggplot(ToothGrowth, aes(rep(1:(length(Len)/2), 2), Len, colour=Dose))
+ geom_point()
ggplot(ToothGrowth, aes(rep(1:(length(Len)/2), 2), Len, colour=Dose)) + geom_point()
ggplot(ToothGrowth, aes(rep(1:(length(Len)/2), 2), Len, colour=Dose)) + geom_point(size=3)
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
sapply(distinct(ToothGrowth$Dose), func(Dose) data.frame(Dose, Mean=mean(ToothGrowth$Dose==Dose)))
sapply(distinct(ToothGrowth$Dose), func(Dose) mean(ToothGrowth$Dose==Dose))
sapply(distinct(ToothGrowth$Dose), function(Dose) mean(ToothGrowth$Dose==Dose))
sapply(unique(ToothGrowth$Dose), function(Dose) mean(ToothGrowth$Dose==Dose))
sapply(unique(ToothGrowth$Dose), function(Dose) data.frame(Dose, Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==Dose])))
unique(ToothGrowth$Dose)
sapply(unique(ToothGrowth$Dose), function(Dose) data.frame(Dose=as.char(Dose), Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==Dose])))
sapply(unique(ToothGrowth$Dose), function(Dose) data.frame(Dose=as.numeric(Dose), Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==Dose])))
sapply(unique(ToothGrowth$Dose), function(Dose) data.frame(Dose=as.character(Dose), Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==Dose])))
sapply(unique(as.character(ToothGrowth$Dose)), function(Dose) data.frame(Dose, Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==Dose])))
unique(as.character(ToothGrowth$Dose))
sapply(unique(as.character(ToothGrowth$Dose)), function(Dose) data.frame(Dose, Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==Dose])))
sapply(unique(as.character(ToothGrowth$Dose)), function(Dose) data.frame(Dose=Dose, Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==Dose])))
sapply(unique(as.character(ToothGrowth$Dose)), function(Dose) data.frame(Dose=Dose, Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==Dose]), StdDev=sd(ToothGrowth$Len[ToothGrowth$Dose==Dose])))
sapply(unique(data.frame(Dose=ToothGrowth$Dose, Supp=ToothGrowth$Supp)), function(x) data.frame(Dose=x$Dose, Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==x$Dose]), StdDev=sd(ToothGrowth$Len[ToothGrowth$Dose==x$Dose])))
sapply(unique(data.frame(Dose=ToothGrowth$Dose, Supp=ToothGrowth$Supp)), function(x) str(x))
sapply(unique(data.frame(Dose=ToothGrowth$Dose, Supp=ToothGrowth$Supp)), function(x) x$Dose)
sapply(unique(data.frame(Dose=ToothGrowth$Dose, Supp=ToothGrowth$Supp)), function(x) x["Dose"])
unique(data.frame(Dose=ToothGrowth$Dose, Supp=ToothGrowth$Supp))
?sapply
sapply(unique(ToothGrowth$Dose), function(Dose) data.frame(Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==Dose]), StdDev=sd(ToothGrowth$Len[ToothGrowth$Dose==Dose])))
sapply(unique(ToothGrowth$Dose), function(Dose) data.frame(Dose=Dose, Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==Dose]), StdDev=sd(ToothGrowth$Len[ToothGrowth$Dose==Dose])))
sapply(unique(as.character(ToothGrowth$Dose)), function(Dose) data.frame(Mean=mean(ToothGrowth$Len[ToothGrowth$Dose==Dose]), StdDev=sd(ToothGrowth$Len[ToothGrowth$Dose==Dose])))
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
?ToothGrowth
source('~/GitHub/StaticalInference3/Part2.R')
?facet_grid
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
str(byDose)
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
bySoaw$N
byDose$N
?ToothGrowth
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
byDose
bySupplement
str(byDose)
source('~/GitHub/StaticalInference3/Part2.R')
VitaminC <- byDose["Vitamin C"]
VitaminC <- byDose["Vitamin C",]
OrangeJuice <- byDose["Orange Juice"]
OrangeJuice <- byDose["Orange Juice",]
sp <- sqrt(((VitaminC$N-1)*VitaminC$StdDev^2+(OrangeJuice$N-1)*OrangeJuice$StdDev) / (VitaminC$N + OrangeJuice$N - 2))
VitaminC
OrangeJuice
VitaminC <- bySupplement["Vitamin C",]
OrangeJuice <- bySupplement["Orange Juice"]
VitaminC <- bySupplement["Vitamin C",]
OrangeJuice <- bySupplement["Orange Juice",]
sp <- sqrt(((VitaminC$N-1)*VitaminC$StdDev^2+(OrangeJuice$N-1)*OrangeJuice$StdDev) / (VitaminC$N + OrangeJuice$N - 2))
VitaminC
str(VitaminC)
source('~/GitHub/StaticalInference3/Part2.R')
VitaminC$N - 1
VitaminC$N
VitaminC$N[1] - 1
str(VitaminC$N)
VitaminC$N[[1]] - 1
sp <- sqrt(((VitaminC$N[[1]]-1)*VitaminC$StdDev^2+(OrangeJuice$N[[1]]-1)*OrangeJuice$StdDev) / (VitaminC$N[[1]] + OrangeJuice$N[[1]] - 2))
sp <- sqrt(((VitaminC$N[[1]]-1)*VitaminC$StdDev[[1]]^2+(OrangeJuice$N[[1]]-1)*OrangeJuice$StdDev[[1]]) / (VitaminC$N[[1]] + OrangeJuice$N[[1]] - 2))
str(bySupplement["Vitamin C",])
str(bySupplement[1,])
?sapply
str(bySupplement[[1]])
source('~/GitHub/StaticalInference3/Part2.R')
print(ci)
source('~/GitHub/StaticalInference3/Part2.R')
print(ci)
source('~/GitHub/StaticalInference3/Part2.R')
source('~/GitHub/StaticalInference3/Part2.R')
?t.test
t.test(ToothGrowth$Len[ToothGrowth$Supp=="OJ"], ToothGrowth$Len[ToothGrowth$Supp=="VC"], alternative="two.sided")
t.test(ToothGrowth$Len[ToothGrowth$Supp=="OJ"], ToothGrowth$Len[ToothGrowth$Supp=="VC"], alternative="two.sided", var.equal=T)
t.test(ToothGrowth$Len[ToothGrowth$Supp=="OJ"], ToothGrowth$Len[ToothGrowth$Supp=="VC"], alternative="two.sided")
sqrt(((VitaminC$N[[1]]-1)*VitaminC$StdDev[[1]]^2+(OrangeJuice$N[[1]]-1)*OrangeJuice$StdDev[[1]]) / (VitaminC$N[[1]] + OrangeJuice$N[[1]] - 2))
t.test(ToothGrowth$Len[ToothGrowth$Dose=="2.0"], ToothGrowth$Len[ToothGrowth$Dose=="0.5"], alternative="two.sided")
t.test(ToothGrowth$Len[ToothGrowth$Dose==2.0], ToothGrowth$Len[ToothGrowth$Dose==0.5], alternative="two.sided")
t.test(ToothGrowth$Len[ToothGrowth$Supp=="OJ"], ToothGrowth$Len[ToothGrowth$Supp=="VC"], alternative="two.sided", conf.level=0.95)
OJMean = mean(ToothGrowth$Len[ToothGrowth$Supp=="OJ"])
OJStdev = sd(ToothGrowth$Len[ToothGrowth$Supp=="OJ"])
View(BySupplement)
View(ByDose)
source('~/GitHub/StaticalInference3/Part2.R')
View(bySupplement)
OJStdev = sd(ToothGrowth$Len[ToothGrowth$Supp=="OJ"])
OJMean = mean(ToothGrowth$Len[ToothGrowth$Supp=="OJ"])
sp
sqrt(((VitaminC$N[[1]]-1)*VitaminC$StdDev[[1]]^2+(OrangeJuice$N[[1]]-1)*OrangeJuice$StdDev[[1]]) / (VitaminC$N[[1]] + OrangeJuice$N[[1]] - 2))
source('~/GitHub/StaticalInference3/Part2.R')
?ToothGrowth
?xtable
library(xtable)
install.packages("xtable")
library(xtable)
?xtable
xtable(bySupplement)
?print.xtable
VitaminC <- bySupplement["Vitamin C",]
OrangeJuice <- bySupplement["Orange Juice",]
sp <- sqrt(((VitaminC$N[[1]]-1)*VitaminC$StdDev[[1]]^2+(OrangeJuice$N[[1]]-1)*OrangeJuice$StdDev[[1]]^2) / (VitaminC$N[[1]] + OrangeJuice$N[[1]] - 2))
ci <- OrangeJuice$Mean[[1]] - VitaminC$Mean[[1]] + c(-1, 1) * qt(0.975, VitaminC$N[[1]] + OrangeJuice$N[[1]] - 2) * sp * sqrt(1 / VitaminC$N[[1]] + 1 / OrangeJuice$N[[1]])
ci
?pnorm
pnorm(0, HighestDose$Mean[[1]], 6.12)
pnorm(0, mean=HighestDose$Mean[[1]], sd=0.6)
pnorm(0, mean=HighestDose$Mean[[1]], sd=3)
HighestDose$Mean[[1]]
pnorm(0, mean=OrangeJuice$Mean[[1]]-VitaminC$Mean[[1]], sd=3)
source('~/GitHub/StaticalInference3/Part2.R')
